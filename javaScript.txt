                                         JAVASCRIPT ORAL QUESTIONS


1. Closures => This is the ability of an inner function to access the values and methods of the parent function.
2. Hoisting => This is JavaScript default behavior of placing declarations at the top.
3. Callback => This is a function that is called as a argument to another function and is executed once the outer function is executed.
4. EVENT LOOP => Is a concept in JavaScript that allows for non-blocking asynchronous operations even though JavaScript is single-threaded.
5. Promise => This is an object that represents the eventual completion or failure of an asynchronous operation.
6. Async/Await => This is an ES8 method for perfoming asynchronous operations built on top of promises. Allows you to write asynchronous code that looks like synchronous code while maintaining non-blocking behavior.
7. Arrow Functions => This is an ES6 method of writing cleaner functions instead of the traditional way of writing functions.
8. Destructuring => This is an ES6 method of accessing values of an array or properties of an object by assigning them to a variable in a more concise way.
9. Spread Operator => An ES6 method of spreading values of an array or properties of an object into a new array or object.
10. Rest Operator => An ES6 method that allows you to collect multiple elements or properties into a single variable.
11. PROTOTYPES => A mechanism by which objects inherit properties and methods from other objects.
12. This Keyword => Referes to the current execution context within a function which depends on how and where its called.
13. Classes => A blue print for creating objects with shared properties and methods.
14. Modules => A way to organize and reuse code by splitting it into separate files.
15. Map/Filter => High order functions that take a callback function as an argument and used to manipulate arrays.
16. Reduce => Array function that applies a callback function to each element in the array accumulating a single result.
17. SetTimeout => Executed after a specified number of seconds.
18. SetInterval => Executed in intervals of the specified number of seconds.

19. Cookies:
            stored on client and sent with every http request
            storage upto 4kb
            store sesntive data
            Accessed by both JavaScript and Server

    Sessions:
            stores data in the server
            Lasts until session expires or when manually deleted
            Server side so more secure and less prone to client side attacks
            No fixed limit on storage.
    
    Local Storage:
            Stores data in client side in browser.
            Storage of 5mb to 10mb
            Lasts even when session ends unless explitly deleted
            Not secure for sensitive data.




WEBPACK => Webpack is a powerful and widely used module bundler for JavaScript applications. It takes your application’s 
           code (JavaScript, CSS, images, etc.) and packages it into a single file or multiple files that can be efficiently
           served to the browser. It’s particularly useful for modern web development, where applications often have complex 
           dependencies and need to be optimized for performance.

POLYFILLS => are pieces of code (typically JavaScript) that provide modern functionality to older browsers that do not natively
           support it. They "fill in the gaps" in browser capabilities by emulating newer features of JavaScript or web APIs in 
           environments where those features are not available.

BABEL => Transpiles modern JavaScript syntax (ES6+) into older versions (e.g., ES5) so that older browsers can understand it.
         Converts new syntax, like let, const, arrow functions, and class, into equivalent older syntax. Does not add missing 
         functionality (e.g., Promise, fetch)—only changes the syntax.



